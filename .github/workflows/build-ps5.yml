# Simple workflow for deploying static content to GitHub Pages
name: Build PS5

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  release:
    types: [ published ]
  push:
    branches:
      - '**'   # all branches

env:
  HAXE_VERSION: 4.3.6
  SDK_VERSION: v0.24.1

jobs:
  # Single deploy job since we're just deploying
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: awalsh128/cache-apt-pkgs-action@v1.4.3
        with:
          packages: bash clang-15 lld-15 socat cmake meson pkg-config
          version: 1.0
          execute_install_scripts: true
      - name: Set env variables
        run: |
          echo "HAXELIB_PATH=/opt/hostedtoolcache/haxe/${{ env.HAXE_VERSION }}/x64/lib" >> $GITHUB_ENV
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          fi
      - name: Setup Haxe environment
        uses: krdlab/setup-haxe@v1.5.1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}
      - name: Checkout HxWell
        uses: actions/checkout@v4
        with:
          repository: barisyild/hxwell
          token: ${{ secrets.HXWELL_TOKEN }}
          path: hxwell
      - name: Install Haxe Dependencies
        run: |
          mkdir -p ${{ env.HAXELIB_PATH }}/hxwell
          echo "${{ github.workspace }}/hxwell" > ${{ env.HAXELIB_PATH }}/hxwell/.dev
          haxelib git haxe-crypto https://github.com/barisyild/haxe-crypto
          haxelib git hxvm-lua https://github.com/kevinresol/hxvm-lua
          haxelib git linc_lua https://github.com/kevinresol/linc_lua
          haxelib install haxe-concurrent 5.1.4
          haxelib install hscript 2.6.0
          haxelib install rulescript 0.2.0
          haxelib install uuid
          
          # Install HXCPP
          cd ${{ env.HAXELIB_PATH }}
          mkdir -p hxcpp
          cd hxcpp
          if [ ! -d "ps5-payload" ]; then
            git clone https://github.com/barisyild/hxcpp/ --branch ps5-payload ps5-payload
            echo ps5-payload > .current
            cd ps5-payload
          else
            cd ps5-payload
            git pull
          fi
          cd tools/hxcpp
          haxe compile.hxml
      - name: Install PS5 SDK
        run: |
          wget https://github.com/ps5-payload-dev/sdk/releases/download/v0.31/ps5-payload-sdk.zip
          sudo unzip -d /opt ps5-payload-sdk.zip
      - name: Build Payload
        run: |
          export PS5_PAYLOAD_SDK=/opt/ps5-payload-sdk
          haxe release.hxml
      - name: Create websrv zip
        run: |
          mv websrv_template airpsx
          zip -r airpsx.zip airpsx
      - uses: actions/upload-artifact@v4
        with:
          name: airpsx.elf
          path: airpsx.elf
      - uses: actions/upload-artifact@v4
        with:
          name: airpsx.zip
          path: airpsx.zip
      - uses: actions/upload-release-asset@v1
        if: ${{ github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: airpsx.elf
          asset_name: airpsx.elf
          asset_content_type: application/x-binary
      - uses: actions/upload-release-asset@v1
        if: ${{ github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: airpsx.zip
          asset_name: airpsx.zip
          asset_content_type: application/zip
